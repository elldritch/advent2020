{-# LANGUAGE QuasiQuotes #-}

module Advent2020.D20Spec (spec) where

import Advent2020.Internal (Grid (..))
import Advent2020.Internal.D20 (Pixel (..), Tile (..), corners, parse, tileID)
import Advent2020.Spec.Internal (shouldBe')
import Relude
import Relude.Extra.Lens
import Test.Hspec (Spec, it, shouldMatchList)
import Text.RawString.QQ (r)

exampleInput :: Text
exampleInput =
  [r|Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...|]

exampleTiles :: [Tile]
exampleTiles =
  [ Tile
      { _tileID = 2311,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), Black),
                    ((0, 1), White),
                    ((0, 2), White),
                    ((0, 3), White),
                    ((0, 4), White),
                    ((0, 5), White),
                    ((0, 6), Black),
                    ((0, 7), Black),
                    ((0, 8), White),
                    ((0, 9), Black),
                    ((1, 0), Black),
                    ((1, 1), White),
                    ((1, 2), Black),
                    ((1, 3), White),
                    ((1, 4), White),
                    ((1, 5), White),
                    ((1, 6), White),
                    ((1, 7), Black),
                    ((1, 8), White),
                    ((1, 9), Black),
                    ((2, 0), White),
                    ((2, 1), Black),
                    ((2, 2), Black),
                    ((2, 3), White),
                    ((2, 4), Black),
                    ((2, 5), Black),
                    ((2, 6), Black),
                    ((2, 7), White),
                    ((2, 8), White),
                    ((2, 9), White),
                    ((3, 0), White),
                    ((3, 1), Black),
                    ((3, 2), Black),
                    ((3, 3), White),
                    ((3, 4), White),
                    ((3, 5), Black),
                    ((3, 6), White),
                    ((3, 7), Black),
                    ((3, 8), Black),
                    ((3, 9), White),
                    ((4, 0), Black),
                    ((4, 1), White),
                    ((4, 2), White),
                    ((4, 3), Black),
                    ((4, 4), White),
                    ((4, 5), Black),
                    ((4, 6), Black),
                    ((4, 7), Black),
                    ((4, 8), Black),
                    ((4, 9), White),
                    ((5, 0), White),
                    ((5, 1), Black),
                    ((5, 2), White),
                    ((5, 3), White),
                    ((5, 4), Black),
                    ((5, 5), White),
                    ((5, 6), White),
                    ((5, 7), Black),
                    ((5, 8), Black),
                    ((5, 9), Black),
                    ((6, 0), Black),
                    ((6, 1), Black),
                    ((6, 2), Black),
                    ((6, 3), Black),
                    ((6, 4), White),
                    ((6, 5), Black),
                    ((6, 6), Black),
                    ((6, 7), Black),
                    ((6, 8), White),
                    ((6, 9), Black),
                    ((7, 0), Black),
                    ((7, 1), Black),
                    ((7, 2), Black),
                    ((7, 3), Black),
                    ((7, 4), White),
                    ((7, 5), White),
                    ((7, 6), Black),
                    ((7, 7), White),
                    ((7, 8), Black),
                    ((7, 9), White),
                    ((8, 0), White),
                    ((8, 1), Black),
                    ((8, 2), White),
                    ((8, 3), Black),
                    ((8, 4), White),
                    ((8, 5), White),
                    ((8, 6), White),
                    ((8, 7), Black),
                    ((8, 8), White),
                    ((8, 9), White),
                    ((9, 0), Black),
                    ((9, 1), Black),
                    ((9, 2), Black),
                    ((9, 3), White),
                    ((9, 4), Black),
                    ((9, 5), White),
                    ((9, 6), White),
                    ((9, 7), Black),
                    ((9, 8), Black),
                    ((9, 9), White)
                  ]
            }
      },
    Tile
      { _tileID = 1951,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), White),
                    ((0, 1), White),
                    ((0, 2), Black),
                    ((0, 3), White),
                    ((0, 4), Black),
                    ((0, 5), Black),
                    ((0, 6), White),
                    ((0, 7), Black),
                    ((0, 8), Black),
                    ((0, 9), White),
                    ((1, 0), Black),
                    ((1, 1), Black),
                    ((1, 2), Black),
                    ((1, 3), Black),
                    ((1, 4), White),
                    ((1, 5), White),
                    ((1, 6), White),
                    ((1, 7), White),
                    ((1, 8), Black),
                    ((1, 9), Black),
                    ((2, 0), White),
                    ((2, 1), White),
                    ((2, 2), Black),
                    ((2, 3), Black),
                    ((2, 4), White),
                    ((2, 5), White),
                    ((2, 6), White),
                    ((2, 7), White),
                    ((2, 8), White),
                    ((2, 9), Black),
                    ((3, 0), White),
                    ((3, 1), White),
                    ((3, 2), Black),
                    ((3, 3), Black),
                    ((3, 4), Black),
                    ((3, 5), White),
                    ((3, 6), Black),
                    ((3, 7), White),
                    ((3, 8), Black),
                    ((3, 9), Black),
                    ((4, 0), Black),
                    ((4, 1), White),
                    ((4, 2), Black),
                    ((4, 3), White),
                    ((4, 4), White),
                    ((4, 5), Black),
                    ((4, 6), White),
                    ((4, 7), Black),
                    ((4, 8), White),
                    ((4, 9), White),
                    ((5, 0), Black),
                    ((5, 1), White),
                    ((5, 2), White),
                    ((5, 3), White),
                    ((5, 4), Black),
                    ((5, 5), White),
                    ((5, 6), White),
                    ((5, 7), Black),
                    ((5, 8), Black),
                    ((5, 9), White),
                    ((6, 0), Black),
                    ((6, 1), Black),
                    ((6, 2), Black),
                    ((6, 3), White),
                    ((6, 4), Black),
                    ((6, 5), White),
                    ((6, 6), Black),
                    ((6, 7), Black),
                    ((6, 8), Black),
                    ((6, 9), Black),
                    ((7, 0), White),
                    ((7, 1), Black),
                    ((7, 2), Black),
                    ((7, 3), White),
                    ((7, 4), Black),
                    ((7, 5), White),
                    ((7, 6), White),
                    ((7, 7), Black),
                    ((7, 8), White),
                    ((7, 9), White),
                    ((8, 0), White),
                    ((8, 1), Black),
                    ((8, 2), White),
                    ((8, 3), White),
                    ((8, 4), Black),
                    ((8, 5), White),
                    ((8, 6), White),
                    ((8, 7), White),
                    ((8, 8), Black),
                    ((8, 9), Black),
                    ((9, 0), Black),
                    ((9, 1), White),
                    ((9, 2), White),
                    ((9, 3), White),
                    ((9, 4), White),
                    ((9, 5), White),
                    ((9, 6), Black),
                    ((9, 7), Black),
                    ((9, 8), White),
                    ((9, 9), Black)
                  ]
            }
      },
    Tile
      { _tileID = 1171,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), White),
                    ((0, 1), White),
                    ((0, 2), White),
                    ((0, 3), Black),
                    ((0, 4), Black),
                    ((0, 5), Black),
                    ((0, 6), Black),
                    ((0, 7), White),
                    ((0, 8), White),
                    ((0, 9), Black),
                    ((1, 0), White),
                    ((1, 1), Black),
                    ((1, 2), White),
                    ((1, 3), White),
                    ((1, 4), Black),
                    ((1, 5), White),
                    ((1, 6), White),
                    ((1, 7), Black),
                    ((1, 8), White),
                    ((1, 9), Black),
                    ((2, 0), White),
                    ((2, 1), Black),
                    ((2, 2), Black),
                    ((2, 3), White),
                    ((2, 4), White),
                    ((2, 5), White),
                    ((2, 6), Black),
                    ((2, 7), White),
                    ((2, 8), White),
                    ((2, 9), Black),
                    ((3, 0), White),
                    ((3, 1), White),
                    ((3, 2), White),
                    ((3, 3), White),
                    ((3, 4), White),
                    ((3, 5), Black),
                    ((3, 6), Black),
                    ((3, 7), White),
                    ((3, 8), White),
                    ((3, 9), Black),
                    ((4, 0), Black),
                    ((4, 1), White),
                    ((4, 2), Black),
                    ((4, 3), Black),
                    ((4, 4), White),
                    ((4, 5), Black),
                    ((4, 6), Black),
                    ((4, 7), Black),
                    ((4, 8), Black),
                    ((4, 9), Black),
                    ((5, 0), Black),
                    ((5, 1), Black),
                    ((5, 2), Black),
                    ((5, 3), White),
                    ((5, 4), Black),
                    ((5, 5), Black),
                    ((5, 6), White),
                    ((5, 7), White),
                    ((5, 8), Black),
                    ((5, 9), White),
                    ((6, 0), Black),
                    ((6, 1), White),
                    ((6, 2), White),
                    ((6, 3), White),
                    ((6, 4), White),
                    ((6, 5), Black),
                    ((6, 6), White),
                    ((6, 7), White),
                    ((6, 8), White),
                    ((6, 9), White),
                    ((7, 0), White),
                    ((7, 1), Black),
                    ((7, 2), Black),
                    ((7, 3), White),
                    ((7, 4), White),
                    ((7, 5), White),
                    ((7, 6), White),
                    ((7, 7), White),
                    ((7, 8), Black),
                    ((7, 9), Black),
                    ((8, 0), White),
                    ((8, 1), Black),
                    ((8, 2), White),
                    ((8, 3), White),
                    ((8, 4), White),
                    ((8, 5), White),
                    ((8, 6), White),
                    ((8, 7), White),
                    ((8, 8), Black),
                    ((8, 9), Black),
                    ((9, 0), Black),
                    ((9, 1), White),
                    ((9, 2), Black),
                    ((9, 3), Black),
                    ((9, 4), White),
                    ((9, 5), Black),
                    ((9, 6), Black),
                    ((9, 7), Black),
                    ((9, 8), Black),
                    ((9, 9), Black)
                  ]
            }
      },
    Tile
      { _tileID = 1427,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), White),
                    ((0, 1), Black),
                    ((0, 2), Black),
                    ((0, 3), White),
                    ((0, 4), Black),
                    ((0, 5), Black),
                    ((0, 6), Black),
                    ((0, 7), Black),
                    ((0, 8), Black),
                    ((0, 9), Black),
                    ((1, 0), White),
                    ((1, 1), White),
                    ((1, 2), White),
                    ((1, 3), Black),
                    ((1, 4), Black),
                    ((1, 5), Black),
                    ((1, 6), Black),
                    ((1, 7), White),
                    ((1, 8), Black),
                    ((1, 9), Black),
                    ((2, 0), White),
                    ((2, 1), Black),
                    ((2, 2), Black),
                    ((2, 3), White),
                    ((2, 4), Black),
                    ((2, 5), Black),
                    ((2, 6), Black),
                    ((2, 7), Black),
                    ((2, 8), White),
                    ((2, 9), White),
                    ((3, 0), Black),
                    ((3, 1), Black),
                    ((3, 2), White),
                    ((3, 3), Black),
                    ((3, 4), Black),
                    ((3, 5), White),
                    ((3, 6), White),
                    ((3, 7), White),
                    ((3, 8), Black),
                    ((3, 9), White),
                    ((4, 0), White),
                    ((4, 1), White),
                    ((4, 2), White),
                    ((4, 3), White),
                    ((4, 4), White),
                    ((4, 5), White),
                    ((4, 6), Black),
                    ((4, 7), White),
                    ((4, 8), Black),
                    ((4, 9), Black),
                    ((5, 0), White),
                    ((5, 1), Black),
                    ((5, 2), Black),
                    ((5, 3), Black),
                    ((5, 4), Black),
                    ((5, 5), Black),
                    ((5, 6), White),
                    ((5, 7), White),
                    ((5, 8), White),
                    ((5, 9), White),
                    ((6, 0), Black),
                    ((6, 1), White),
                    ((6, 2), White),
                    ((6, 3), White),
                    ((6, 4), Black),
                    ((6, 5), Black),
                    ((6, 6), White),
                    ((6, 7), White),
                    ((6, 8), White),
                    ((6, 9), Black),
                    ((7, 0), White),
                    ((7, 1), White),
                    ((7, 2), Black),
                    ((7, 3), White),
                    ((7, 4), Black),
                    ((7, 5), White),
                    ((7, 6), White),
                    ((7, 7), Black),
                    ((7, 8), White),
                    ((7, 9), Black),
                    ((8, 0), Black),
                    ((8, 1), Black),
                    ((8, 2), Black),
                    ((8, 3), Black),
                    ((8, 4), White),
                    ((8, 5), White),
                    ((8, 6), White),
                    ((8, 7), White),
                    ((8, 8), Black),
                    ((8, 9), White),
                    ((9, 0), Black),
                    ((9, 1), Black),
                    ((9, 2), White),
                    ((9, 3), White),
                    ((9, 4), White),
                    ((9, 5), Black),
                    ((9, 6), White),
                    ((9, 7), Black),
                    ((9, 8), White),
                    ((9, 9), Black)
                  ]
            }
      },
    Tile
      { _tileID = 1489,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), White),
                    ((0, 1), Black),
                    ((0, 2), Black),
                    ((0, 3), Black),
                    ((0, 4), White),
                    ((0, 5), White),
                    ((0, 6), Black),
                    ((0, 7), White),
                    ((0, 8), Black),
                    ((0, 9), White),
                    ((1, 0), White),
                    ((1, 1), Black),
                    ((1, 2), White),
                    ((1, 3), Black),
                    ((1, 4), White),
                    ((1, 5), Black),
                    ((1, 6), Black),
                    ((1, 7), White),
                    ((1, 8), Black),
                    ((1, 9), White),
                    ((2, 0), Black),
                    ((2, 1), White),
                    ((2, 2), White),
                    ((2, 3), White),
                    ((2, 4), White),
                    ((2, 5), Black),
                    ((2, 6), Black),
                    ((2, 7), Black),
                    ((2, 8), White),
                    ((2, 9), White),
                    ((3, 0), White),
                    ((3, 1), White),
                    ((3, 2), Black),
                    ((3, 3), Black),
                    ((3, 4), White),
                    ((3, 5), White),
                    ((3, 6), White),
                    ((3, 7), White),
                    ((3, 8), White),
                    ((3, 9), Black),
                    ((4, 0), Black),
                    ((4, 1), Black),
                    ((4, 2), Black),
                    ((4, 3), Black),
                    ((4, 4), White),
                    ((4, 5), Black),
                    ((4, 6), Black),
                    ((4, 7), Black),
                    ((4, 8), Black),
                    ((4, 9), White),
                    ((5, 0), White),
                    ((5, 1), Black),
                    ((5, 2), White),
                    ((5, 3), Black),
                    ((5, 4), Black),
                    ((5, 5), White),
                    ((5, 6), White),
                    ((5, 7), Black),
                    ((5, 8), White),
                    ((5, 9), White),
                    ((6, 0), Black),
                    ((6, 1), Black),
                    ((6, 2), White),
                    ((6, 3), White),
                    ((6, 4), Black),
                    ((6, 5), Black),
                    ((6, 6), Black),
                    ((6, 7), Black),
                    ((6, 8), White),
                    ((6, 9), Black),
                    ((7, 0), Black),
                    ((7, 1), White),
                    ((7, 2), Black),
                    ((7, 3), Black),
                    ((7, 4), Black),
                    ((7, 5), White),
                    ((7, 6), White),
                    ((7, 7), White),
                    ((7, 8), Black),
                    ((7, 9), White),
                    ((8, 0), Black),
                    ((8, 1), Black),
                    ((8, 2), Black),
                    ((8, 3), Black),
                    ((8, 4), White),
                    ((8, 5), Black),
                    ((8, 6), Black),
                    ((8, 7), White),
                    ((8, 8), White),
                    ((8, 9), Black),
                    ((9, 0), Black),
                    ((9, 1), Black),
                    ((9, 2), Black),
                    ((9, 3), Black),
                    ((9, 4), Black),
                    ((9, 5), White),
                    ((9, 6), Black),
                    ((9, 7), Black),
                    ((9, 8), White),
                    ((9, 9), Black)
                  ]
            }
      },
    Tile
      { _tileID = 2473,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), White),
                    ((0, 1), White),
                    ((0, 2), White),
                    ((0, 3), White),
                    ((0, 4), Black),
                    ((0, 5), Black),
                    ((0, 6), Black),
                    ((0, 7), White),
                    ((0, 8), White),
                    ((0, 9), Black),
                    ((1, 0), Black),
                    ((1, 1), Black),
                    ((1, 2), Black),
                    ((1, 3), White),
                    ((1, 4), White),
                    ((1, 5), White),
                    ((1, 6), White),
                    ((1, 7), White),
                    ((1, 8), White),
                    ((1, 9), Black),
                    ((2, 0), Black),
                    ((2, 1), Black),
                    ((2, 2), White),
                    ((2, 3), White),
                    ((2, 4), Black),
                    ((2, 5), White),
                    ((2, 6), White),
                    ((2, 7), White),
                    ((2, 8), Black),
                    ((2, 9), White),
                    ((3, 0), Black),
                    ((3, 1), White),
                    ((3, 2), White),
                    ((3, 3), White),
                    ((3, 4), Black),
                    ((3, 5), White),
                    ((3, 6), White),
                    ((3, 7), White),
                    ((3, 8), Black),
                    ((3, 9), White),
                    ((4, 0), Black),
                    ((4, 1), Black),
                    ((4, 2), Black),
                    ((4, 3), White),
                    ((4, 4), Black),
                    ((4, 5), White),
                    ((4, 6), Black),
                    ((4, 7), White),
                    ((4, 8), Black),
                    ((4, 9), White),
                    ((5, 0), White),
                    ((5, 1), White),
                    ((5, 2), Black),
                    ((5, 3), White),
                    ((5, 4), White),
                    ((5, 5), White),
                    ((5, 6), White),
                    ((5, 7), White),
                    ((5, 8), White),
                    ((5, 9), Black),
                    ((6, 0), White),
                    ((6, 1), White),
                    ((6, 2), White),
                    ((6, 3), Black),
                    ((6, 4), Black),
                    ((6, 5), White),
                    ((6, 6), Black),
                    ((6, 7), White),
                    ((6, 8), White),
                    ((6, 9), White),
                    ((7, 0), White),
                    ((7, 1), Black),
                    ((7, 2), Black),
                    ((7, 3), White),
                    ((7, 4), White),
                    ((7, 5), White),
                    ((7, 6), Black),
                    ((7, 7), White),
                    ((7, 8), Black),
                    ((7, 9), Black),
                    ((8, 0), White),
                    ((8, 1), Black),
                    ((8, 2), Black),
                    ((8, 3), Black),
                    ((8, 4), Black),
                    ((8, 5), White),
                    ((8, 6), White),
                    ((8, 7), Black),
                    ((8, 8), White),
                    ((8, 9), White),
                    ((9, 0), Black),
                    ((9, 1), Black),
                    ((9, 2), Black),
                    ((9, 3), White),
                    ((9, 4), White),
                    ((9, 5), White),
                    ((9, 6), Black),
                    ((9, 7), White),
                    ((9, 8), Black),
                    ((9, 9), Black)
                  ]
            }
      },
    Tile
      { _tileID = 2971,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), Black),
                    ((0, 1), White),
                    ((0, 2), White),
                    ((0, 3), White),
                    ((0, 4), Black),
                    ((0, 5), Black),
                    ((0, 6), White),
                    ((0, 7), Black),
                    ((0, 8), Black),
                    ((0, 9), Black),
                    ((1, 0), Black),
                    ((1, 1), Black),
                    ((1, 2), Black),
                    ((1, 3), White),
                    ((1, 4), White),
                    ((1, 5), White),
                    ((1, 6), Black),
                    ((1, 7), Black),
                    ((1, 8), Black),
                    ((1, 9), Black),
                    ((2, 0), White),
                    ((2, 1), Black),
                    ((2, 2), White),
                    ((2, 3), Black),
                    ((2, 4), White),
                    ((2, 5), Black),
                    ((2, 6), Black),
                    ((2, 7), White),
                    ((2, 8), White),
                    ((2, 9), Black),
                    ((3, 0), Black),
                    ((3, 1), Black),
                    ((3, 2), Black),
                    ((3, 3), White),
                    ((3, 4), White),
                    ((3, 5), Black),
                    ((3, 6), White),
                    ((3, 7), White),
                    ((3, 8), Black),
                    ((3, 9), White),
                    ((4, 0), White),
                    ((4, 1), White),
                    ((4, 2), White),
                    ((4, 3), White),
                    ((4, 4), White),
                    ((4, 5), White),
                    ((4, 6), Black),
                    ((4, 7), White),
                    ((4, 8), White),
                    ((4, 9), Black),
                    ((5, 0), Black),
                    ((5, 1), White),
                    ((5, 2), White),
                    ((5, 3), Black),
                    ((5, 4), White),
                    ((5, 5), White),
                    ((5, 6), White),
                    ((5, 7), White),
                    ((5, 8), Black),
                    ((5, 9), White),
                    ((6, 0), Black),
                    ((6, 1), White),
                    ((6, 2), White),
                    ((6, 3), Black),
                    ((6, 4), Black),
                    ((6, 5), White),
                    ((6, 6), Black),
                    ((6, 7), Black),
                    ((6, 8), White),
                    ((6, 9), Black),
                    ((7, 0), Black),
                    ((7, 1), Black),
                    ((7, 2), Black),
                    ((7, 3), White),
                    ((7, 4), Black),
                    ((7, 5), White),
                    ((7, 6), Black),
                    ((7, 7), White),
                    ((7, 8), White),
                    ((7, 9), White),
                    ((8, 0), Black),
                    ((8, 1), Black),
                    ((8, 2), Black),
                    ((8, 3), Black),
                    ((8, 4), White),
                    ((8, 5), Black),
                    ((8, 6), White),
                    ((8, 7), White),
                    ((8, 8), White),
                    ((8, 9), Black),
                    ((9, 0), White),
                    ((9, 1), Black),
                    ((9, 2), Black),
                    ((9, 3), Black),
                    ((9, 4), White),
                    ((9, 5), White),
                    ((9, 6), Black),
                    ((9, 7), White),
                    ((9, 8), Black),
                    ((9, 9), White)
                  ]
            }
      },
    Tile
      { _tileID = 2729,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), Black),
                    ((0, 1), White),
                    ((0, 2), Black),
                    ((0, 3), Black),
                    ((0, 4), Black),
                    ((0, 5), Black),
                    ((0, 6), White),
                    ((0, 7), White),
                    ((0, 8), White),
                    ((0, 9), White),
                    ((1, 0), Black),
                    ((1, 1), White),
                    ((1, 2), Black),
                    ((1, 3), Black),
                    ((1, 4), White),
                    ((1, 5), White),
                    ((1, 6), White),
                    ((1, 7), White),
                    ((1, 8), White),
                    ((1, 9), Black),
                    ((2, 0), Black),
                    ((2, 1), White),
                    ((2, 2), White),
                    ((2, 3), Black),
                    ((2, 4), White),
                    ((2, 5), Black),
                    ((2, 6), White),
                    ((2, 7), Black),
                    ((2, 8), Black),
                    ((2, 9), White),
                    ((3, 0), White),
                    ((3, 1), White),
                    ((3, 2), Black),
                    ((3, 3), Black),
                    ((3, 4), Black),
                    ((3, 5), White),
                    ((3, 6), White),
                    ((3, 7), White),
                    ((3, 8), Black),
                    ((3, 9), White),
                    ((4, 0), Black),
                    ((4, 1), Black),
                    ((4, 2), White),
                    ((4, 3), White),
                    ((4, 4), Black),
                    ((4, 5), White),
                    ((4, 6), Black),
                    ((4, 7), White),
                    ((4, 8), White),
                    ((4, 9), Black),
                    ((5, 0), White),
                    ((5, 1), White),
                    ((5, 2), Black),
                    ((5, 3), Black),
                    ((5, 4), White),
                    ((5, 5), White),
                    ((5, 6), White),
                    ((5, 7), White),
                    ((5, 8), Black),
                    ((5, 9), Black),
                    ((6, 0), Black),
                    ((6, 1), Black),
                    ((6, 2), Black),
                    ((6, 3), Black),
                    ((6, 4), White),
                    ((6, 5), White),
                    ((6, 6), Black),
                    ((6, 7), White),
                    ((6, 8), White),
                    ((6, 9), Black),
                    ((7, 0), White),
                    ((7, 1), Black),
                    ((7, 2), Black),
                    ((7, 3), White),
                    ((7, 4), Black),
                    ((7, 5), Black),
                    ((7, 6), White),
                    ((7, 7), Black),
                    ((7, 8), White),
                    ((7, 9), White),
                    ((8, 0), Black),
                    ((8, 1), Black),
                    ((8, 2), Black),
                    ((8, 3), Black),
                    ((8, 4), White),
                    ((8, 5), Black),
                    ((8, 6), Black),
                    ((8, 7), Black),
                    ((8, 8), Black),
                    ((8, 9), White),
                    ((9, 0), White),
                    ((9, 1), Black),
                    ((9, 2), Black),
                    ((9, 3), White),
                    ((9, 4), Black),
                    ((9, 5), Black),
                    ((9, 6), Black),
                    ((9, 7), Black),
                    ((9, 8), Black),
                    ((9, 9), Black)
                  ]
            }
      },
    Tile
      { _tileID = 3079,
        _tileGrid =
          Grid
            { _gridHeight = 10,
              _gridWidth = 10,
              _gridMap =
                fromList
                  [ ((0, 0), White),
                    ((0, 1), Black),
                    ((0, 2), Black),
                    ((0, 3), White),
                    ((0, 4), White),
                    ((0, 5), Black),
                    ((0, 6), White),
                    ((0, 7), Black),
                    ((0, 8), Black),
                    ((0, 9), Black),
                    ((1, 0), Black),
                    ((1, 1), White),
                    ((1, 2), Black),
                    ((1, 3), White),
                    ((1, 4), White),
                    ((1, 5), White),
                    ((1, 6), Black),
                    ((1, 7), Black),
                    ((1, 8), Black),
                    ((1, 9), Black),
                    ((2, 0), White),
                    ((2, 1), Black),
                    ((2, 2), White),
                    ((2, 3), White),
                    ((2, 4), White),
                    ((2, 5), Black),
                    ((2, 6), White),
                    ((2, 7), White),
                    ((2, 8), White),
                    ((2, 9), White),
                    ((3, 0), Black),
                    ((3, 1), Black),
                    ((3, 2), Black),
                    ((3, 3), White),
                    ((3, 4), White),
                    ((3, 5), Black),
                    ((3, 6), White),
                    ((3, 7), Black),
                    ((3, 8), Black),
                    ((3, 9), Black),
                    ((4, 0), White),
                    ((4, 1), White),
                    ((4, 2), Black),
                    ((4, 3), White),
                    ((4, 4), Black),
                    ((4, 5), Black),
                    ((4, 6), White),
                    ((4, 7), White),
                    ((4, 8), Black),
                    ((4, 9), White),
                    ((5, 0), White),
                    ((5, 1), White),
                    ((5, 2), Black),
                    ((5, 3), White),
                    ((5, 4), White),
                    ((5, 5), White),
                    ((5, 6), White),
                    ((5, 7), White),
                    ((5, 8), Black),
                    ((5, 9), White),
                    ((6, 0), White),
                    ((6, 1), White),
                    ((6, 2), Black),
                    ((6, 3), Black),
                    ((6, 4), Black),
                    ((6, 5), Black),
                    ((6, 6), White),
                    ((6, 7), White),
                    ((6, 8), Black),
                    ((6, 9), White),
                    ((7, 0), White),
                    ((7, 1), White),
                    ((7, 2), Black),
                    ((7, 3), Black),
                    ((7, 4), Black),
                    ((7, 5), White),
                    ((7, 6), Black),
                    ((7, 7), Black),
                    ((7, 8), Black),
                    ((7, 9), Black),
                    ((8, 0), White),
                    ((8, 1), White),
                    ((8, 2), Black),
                    ((8, 3), Black),
                    ((8, 4), White),
                    ((8, 5), White),
                    ((8, 6), White),
                    ((8, 7), Black),
                    ((8, 8), Black),
                    ((8, 9), Black),
                    ((9, 0), Black),
                    ((9, 1), White),
                    ((9, 2), Black),
                    ((9, 3), Black),
                    ((9, 4), Black),
                    ((9, 5), Black),
                    ((9, 6), White),
                    ((9, 7), Black),
                    ((9, 8), Black),
                    ((9, 9), Black)
                  ]
            }
      }
  ]

spec :: Spec
spec = do
  it "parses camera tiles" $ do
    parse exampleInput `shouldBe'` exampleTiles

  it "computes corner tiles" $ do
    (^. tileID) <$> corners exampleTiles `shouldMatchList` [1951, 3079, 2971, 1171]
